!function(window,angular){function Utils($location,$log){function isMobileValid(mobile){return/^1\d{10}$/.test(mobile)}function isBlank(str){return!str||/^\s*$/.test(str)}function isNumber(n){return!isNaN(n)}function toPercent(value){return Math.min(Math.round(1e4*value)/100,100)}return{isBlank:isBlank,isMobileValid:isMobileValid,isNumber:isNumber,toPercent:toPercent}}angular.module("module.services",[]).service("Utils",Utils)}(window,window.angular),function(window,angular){function configCompileProvider($compileProvider){$compileProvider.imgSrcSanitizationWhitelist(/^\s*(https|file|blob|cdvfile|http|chrome-extension|blob:chrome-extension):|data:image\//)}function configHttpProvider($httpProvider){$httpProvider.defaults.headers.common["Content-Type"]="application/json",$httpProvider.defaults.headers.post["Content-Type"]="application/json"}function extendLog($provide){$provide.decorator("$log",function($delegate,$injector){var _log=$delegate.log;return $delegate.log=function(msg,forceLog){return _log(msg),this},$delegate})}function initApp($rootScope,$http){$rootScope.loadingPage=!0,$rootScope.clickPage=function(){$rootScope.$broadcast("page_clicked",{})}}angular.module("how2read",["module.services"]).config(configCompileProvider).config(configHttpProvider).config(extendLog).run(initApp)}(window,window.angular),function(window,angular){function IssueCtrl($rootScope,$http,$log){function activate(){vm.currentPage="kickoff",$http.get("/api/issues/1/questions").then(function(response){vm.questions=response},function(response){})}function kickoff(){vm.currentPage="question"}function nextQuestion(){}var vm=this;vm.nextQuestion=nextQuestion,vm.kickoff=kickoff,activate()}angular.module("how2read").controller("IssueCtrl",IssueCtrl)}(window,window.angular);